{"version":3,"sources":["WorkInterval.js","CalendarGrid.js","AddProject.js","DisplayPeriod.js","ManageProjects.js","TimeSheet.js","Timer.js","LoadTimeSheet.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["WorkInterval","props","key","datestamp","timestamp","localStorage","getItem","state","isWorked","taskComment","project","work_obj","JSON","parse","event","this","setState","target","value","comment","setItem","stringify","removeItem","split","projectList","trigger","href","style","textAlign","position","closeOnDocumentClick","onChange","handleProjectChange","bind","Object","entries","map","type","name","handleCommentChange","onClick","handleDeleteClick","React","Component","moment","extendMoment","Moment","CalendarGrid","class","timeRange","item","format","dateRange","m","id","AddProject","handleProjectNameChange","handleProjectEmojiChange","handleNameChange","handleEmojiChange","emoji","native","handleAddProject","DisplayPeriod","startDate","endDate","startTime","endTime","date","handleStartDate","handleEndDate","time","handleStartTime","handleEndTime","modal","selected","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","ManageProjects","className","projects","index","handleDeleteProject","TimeSheet","exportObj","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","exportName","body","appendChild","click","remove","filter","handleDownloadTimeSheet","projectTime","projectData","Timer","currentTime","pomodoroTime","interval","setInterval","prevTime","clearInterval","stopTimer","minute","second","LoadTimeSheet","console","log","reader","FileReader","onload","file","result","readAsText","files","handleFileUpload","Header","App","start","Date","end","range","Array","from","by","clockStart","clockEnd","range2","step","emojiIndex","search","projectName","projectEmoji","tempObj","prevState","storageObj","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9176d81.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\n\r\nclass WorkInterval extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      let key = this.props.datestamp + ' - ' + this.props.timestamp;\r\n      if (localStorage.getItem(key) == null) {\r\n        this.state = {isWorked: false,\r\n                      taskComment: ' ',\r\n                      project: ' '};\r\n        }\r\n      else {\r\n        let work_obj = JSON.parse(localStorage.getItem(key));\r\n        this.state = {\r\n          isWorked:true,\r\n          taskComment: work_obj['comment'],\r\n          project: work_obj['project']\r\n          }\r\n        }\r\n      }    \r\n    \r\n    handleClick(event) {\r\n      this.setState({isWorked: !this.state.isWorked});\r\n    }\r\n  \r\n    handleCommentChange (event) {\r\n      this.setState({taskComment: event.target.value}, () => {\r\n      const timestamp = this.props.datestamp + ' - ' + this.props.timestamp\r\n      const work_obj = {\r\n        comment: this.state.taskComment,\r\n        project: this.state.project\r\n      }\r\n      localStorage.setItem(timestamp,JSON.stringify(work_obj))\r\n      })\r\n    }\r\n  \r\n    handleDeleteClick(event) {\r\n      const key = this.props.datestamp + ' - ' + this.props.timestamp;\r\n      if (localStorage.getItem(key)) {\r\n        localStorage.removeItem(key);\r\n      }\r\n      this.setState({\r\n        isWorked: false,\r\n        taskComment: \" \"\r\n      })\r\n    }\r\n  \r\n    handleProjectChange(event) {\r\n      this.setState({project:event.target.value.split('-')[1]})\r\n    }\r\n  \r\n    handleSaveClick (event) {\r\n      const timestamp = this.props.datestamp + ' - ' + this.props.timestamp\r\n      const work_obj = {\r\n        comment: this.state.taskComment,\r\n        project: this.state.project\r\n      }\r\n      localStorage.setItem(timestamp,JSON.stringify(work_obj))\r\n      \r\n    }\r\n  \r\n    render() {\r\n      let projectList = localStorage.getItem(\"projects\") ? \r\n                        JSON.parse(localStorage.getItem(\"projects\")) :\r\n                        {};\r\n      let key = this.props.datestamp + ' - ' + this.props.timestamp; \r\n      let project = localStorage.getItem(key) ? \r\n                    JSON.parse(localStorage.getItem(key))[\"project\"] :\r\n                    ' '\r\n      return (\r\n          <Popup \r\n              trigger={<a href=\"#\" style={{textAlign: \"center\"}}>{project}</a>} \r\n              position=\"top left\"\r\n              closeOnDocumentClick>\r\n              <h2>{this.props.datestamp} - {this.props.timestamp}</h2>    \r\n              <h3>Select Project:</h3>\r\n  \r\n              <select onChange={this.handleProjectChange.bind(this)}>\r\n              {\r\n                Object.entries(projectList).map((key) => {\r\n                  return (<option>{key[0]} - {key[1]}</option>)\r\n                })\r\n              }\r\n              </select>\r\n                <h3>Enter comment:</h3>\r\n                <input \r\n                  type=\"text\" \r\n                  name=\"comment\" \r\n                  value={this.state.taskComment}\r\n                  onChange={this.handleCommentChange.bind(this)}>\r\n                </input>\r\n              <button type=\"submit\" onClick={this.handleDeleteClick.bind(this)}>Delete</button></Popup>\r\n        )\r\n      }\r\n  }\r\n\r\nexport default WorkInterval;","import React from 'react';\r\nimport './App.css';\r\nimport Moment from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport WorkInterval from './WorkInterval';\r\n\r\nconst moment = extendMoment(Moment);\r\n\r\nclass CalendarGrid extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    render() {\r\n       return (\r\n        <table class=\"ui celled definition compact large table\">\r\n          <thead>\r\n            <th>Date</th>\r\n            {this.props.timeRange.map((item) => { \r\n              const timestamp = moment(item).format('HH:mm');\r\n            return(\r\n            <th>{timestamp}</th>)})}\r\n          </thead>\r\n          <tbody>\r\n            {this.props.dateRange.map((m) => {\r\n                return (\r\n                <tr>  \r\n                  <td id=\"row\">{m.format('MM/DD')}</td>\r\n                  {this.props.timeRange.map((item) => {\r\n                    const timestamp = moment(item).format('HH:mm');\r\n                    return (\r\n                      <td class=\"selectable\">\r\n                        <WorkInterval \r\n                            datestamp={m.format('MM/DD')}\r\n                            timestamp={timestamp}\r\n                            dateRange = {this.props.dateRange} \r\n                            />\r\n                      </td>                  \r\n                      )\r\n                    })} \r\n                </tr>\r\n                )\r\n              })} \r\n          </tbody>\r\n        </table>\r\n  \r\n      )\r\n    }\r\n  }\r\n\r\n  export default CalendarGrid;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass AddProject extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleNameChange (event) {\r\n    this.props.handleProjectNameChange(event.target.value);\r\n  }\r\n\r\n  handleEmojiChange (event) {\r\n    this.props.handleProjectEmojiChange(event.target.value);\r\n  }\r\n  render() {\r\n    return (      \r\n        <>\r\n        <div class=\"ui input\">\r\n          <input class=\"ui input\" type=\"text\" name=\"projectName\" onChange={this.handleNameChange.bind(this)}></input>\r\n        </div>\r\n        <select onChange={this.handleEmojiChange.bind(this)}>\r\n          {this.props.emoji.map((item) => {\r\n            return(\r\n              <option>{item.native}</option>\r\n            )\r\n          })}\r\n        </select>\r\n        <p> </p>\r\n        <button class=\"ui button\" onClick={this.props.handleAddProject}>Add Project</button>\r\n        \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddProject;","import React from 'react';\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nclass DisplayPeriod extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startDate: this.props.startDate,\r\n      endDate: this.props.endDate,\r\n      startTime: this.props.startTime,\r\n      endTime: this.props.endTime\r\n    }\r\n  }\r\n\r\n  handleStartDate(date) {\r\n    this.props.handleStartDate(date);\r\n  }\r\n  handleEndDate(date) {\r\n    this.props.handleEndDate(date);\r\n  }\r\n  handleStartTime(time) {\r\n    this.props.handleStartTime(time);\r\n  }\r\n  handleEndTime(time) {\r\n    this.props.handleEndTime(time);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Popup\r\n        modal\r\n        trigger={<a class=\"ui button\">Adjust Display Period</a>}>\r\n        <h4>Pick Start Date: <DatePicker\r\n                              selected={this.props.startDate}\r\n                              onChange={this.handleStartDate.bind(this)} /></h4>\r\n        <h4>Pick End Date:   <DatePicker\r\n                              selected={this.props.endDate}\r\n                              onChange={this.handleEndDate.bind(this)} /></h4>\r\n        <h4>Pick Start Time: <DatePicker\r\n                              selected={this.props.startTime}\r\n                              onChange={this.handleStartTime.bind(this)}\r\n                              showTimeSelect\r\n                              showTimeSelectOnly\r\n                              timeIntervals = {30}\r\n                              timeCaption = \"Time\"\r\n                              dateFormat = \"hh:mm\"/></h4>\r\n        <h4>Pick End Time:   <DatePicker\r\n                              selected={this.props.endTime}\r\n                              onChange={this.handleEndTime.bind(this)}\r\n                              showTimeSelect\r\n                              showTimeSelectOnly\r\n                              timeIntervals = {30}\r\n                              timeCaption = \"Time\"\r\n                              dateFormat = \"hh:mm\"/></h4>\r\n      </Popup>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayPeriod;","import React from 'react';\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\nclass ManageProjects extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Popup\r\n        trigger={<a className=\"ui button\">Manage Projects</a>}\r\n        position=\"bottom left\"\r\n        modal>\r\n        <h2>Manage Projects</h2>\r\n        {Object.entries(this.props.projects).map((key, index) => {\r\n          return (\r\n            <div>\r\n              <h3>{key[1]}  {key[0]}  <button type=\"submit\" value={key[0]} onClick={this.props.handleDeleteProject}>Delete</button></h3>\r\n            </div>)\r\n        })}\r\n      </Popup>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ManageProjects;","//TODO Fix timer\r\n//TODO Add export/import feature\r\nimport React from 'react';\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\n\r\nclass TimeSheet extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    handleDownloadTimeSheet() {\r\n      // From https://stackoverflow.com/questions/19721439/download-json-object-as-a-file-from-browser\r\n      let exportObj = localStorage;\r\n      let exportName = \"timesheet\"\r\n      var dataStr = \"data:text/csv;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n      var downloadAnchorNode = document.createElement('a');\r\n      downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n      downloadAnchorNode.setAttribute(\"download\", exportName + \".csv\");\r\n      document.body.appendChild(downloadAnchorNode); // required for firefox\r\n      downloadAnchorNode.click();\r\n      downloadAnchorNode.remove();\r\n    }\r\n\r\n    handleUploadTimeSheet() {\r\n\r\n    }\r\n  \r\n    render() {\r\n      let projects = Object.entries(localStorage).filter((key) => key[0] != \"projects\");\r\n      return (\r\n        <Popup\r\n         trigger={<a className=\"ui button\">View Timesheet</a>}\r\n        >\r\n        <h4><a type=\"submit\" href=\"#\" onClick={this.handleDownloadTimeSheet.bind(this)}>Download TimeSheet</a></h4>\r\n        <h1>Timesheet</h1> \r\n        {projects.map((item) => {\r\n          const projectTime = item[0];\r\n          const projectData = JSON.parse(item[1]);\r\n          return(\r\n            <div>\r\n              <h4>{projectTime} - {projectData[\"comment\"]} {projectData[\"project\"]}</h4>\r\n            </div>\r\n          )\r\n        })\r\n          })\r\n          })} \r\n         </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default TimeSheet;","import React from 'react';\r\nimport './App.css';\r\nimport Moment from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\n\r\nconst moment = extendMoment(Moment);\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {currentTime:moment().format('HH:mm'),\r\n                  pomodoroTime: 0}\r\n  }\r\n\r\n  tick() {\r\n    this.interval = setInterval(() => {\r\n      this.setState(prevTime => ({\r\n        pomodoroTime: prevTime.pomodoroTime + 1\r\n      }));\r\n    }, 1000);\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  clearTimer() {\r\n    this.stopTimer();\r\n    this.setState({pomodoroTime:0})\r\n  }\r\n  render () {\r\n    return (\r\n      <a class=\"ui button\">Timer - {moment({ minute:this.state.pomodoroTime / 60,\r\n                                            second:this.state.pomodoroTime % 60 }).format('m:ss')}</a>   \r\n    )\r\n  }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport './App.css';\r\nimport { callbackify } from 'util';\r\n\r\nclass LoadTimeSheet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleFileUpload (event) {\r\n        console.log(event.target.value)\r\n        const reader = new FileReader()\r\n        reader.onload = function(file) {\r\n            var result = JSON.parse(reader.result)\r\n            console.log(result)\r\n            Object.entries(result).map((key) => {\r\n                console.log(key)\r\n                localStorage.setItem(key[0], key[1]); \r\n            })  \r\n            \r\n        }\r\n        reader.readAsText(event.target.files[0])\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <input type=\"file\" onChange={this.handleFileUpload.bind(this)} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadTimeSheet;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport AddProject from './AddProject';\r\nimport DisplayPeriod from './DisplayPeriod';\r\nimport ManageProjects from './ManageProjects';\r\nimport TimeSheet from './TimeSheet';\r\nimport Timer from './Timer';\r\nimport LoadTimeSheet from './LoadTimeSheet'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"ui huge message page grid\">\r\n          <h1 class=\"ui huge header\">Pomodoro Time Tracker</h1>\r\n          <p>A simple WebApp allowing tracking of time against projects using the Pomodoro method.</p>\r\n          <p>Time is stored locally in the browser with no account needed.</p>\r\n          <p>To get started, enter a project and choose an Emoji to use in the grid:</p>\r\n          \r\n          <AddProject \r\n            projects = {this.props.projects}\r\n            emoji = {this.props.emoji}\r\n            handleAddProject = {this.props.handleAddProject}\r\n            handleProjectNameChange = {this.props.handleProjectNameChange}\r\n            handleProjectEmojiChange = {this.props.handleProjectEmojiChange} \r\n          />\r\n          <p>Add projects using the \"Manage Projects\" Button and log time by click a cell below</p>     \r\n          <p>Or load an existing timesheet file: <LoadTimeSheet handleFileUpload={this.props.handleFileUpload.bind(this)} /></p>\r\n        \r\n        <div class=\"ui buttons\">\r\n          <DisplayPeriod\r\n              startDate = {this.props.startDate}\r\n              endDate = {this.props.endDate}\r\n              startTime = {this.props.startTime}\r\n              endTime = {this.props.endTime}\r\n              dateRange = {this.props.dateRange}\r\n              timeRange = {this.props.timeRange}\r\n              handleStartDate = {this.props.handleStartDate}\r\n              handleEndDate = {this.props.handleEndDate}\r\n              handleStartTime = {this.props.handleStartTime}\r\n              handleEndTime = {this.props.handleEndTime}\r\n            />\r\n        </div>\r\n\r\n        <div class=\"ui buttons\">\r\n          <ManageProjects \r\n            projects={this.props.projects}\r\n            handleDeleteProject={this.props.handleDeleteProject}\r\n         />\r\n        </div>\r\n\r\n        <div class=\"ui buttons\">\r\n          <TimeSheet />\r\n        </div>\r\n\r\n        <div class=\"ui buttons\">   \r\n            <Timer />\r\n        </div>\r\n          </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Header;","//TODO Fix timer\n//TODO Add export/import feature\nimport React from 'react';\nimport './App.css';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Popup from 'reactjs-popup';\nimport { emojiIndex } from 'emoji-mart';\nimport DatePicker from 'react-datepicker';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Import local components\nimport CalendarGrid from './CalendarGrid';\nimport Header from './Header';\n\n\nconst moment = extendMoment(Moment);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    const start = new Date(2019,11,1);\n    const end = new Date(2019,11,31);\n    const range = moment.range(start,end);\n    const dateRange = Array.from(range.by('days'));\n    const clockStart = new Date(2019,9,1,0,0)\n    const clockEnd = new Date(2019,9,1,23,59)\n    const range2 = moment.range(clockStart, clockEnd);\n    const timeRange = Array.from(range2.by('minutes', {step:30}));      \n    let projects = localStorage.getItem('projects') ?\n                   JSON.parse(localStorage.getItem('projects')) :\n                   {}; \n                    \n    this.state = ({\n      startDate: start,\n      endDate: end,\n      startTime: clockStart,\n      endTime: clockEnd,\n      dateRange: dateRange,\n      timeRange: timeRange,\n      projects: projects,\n      emoji: emojiIndex.search('fruit'),\n      projectName: '',\n      projectEmoji: ''\n    })\n  }\n  \n  handleStartDate(date) {\n    const range = moment.range(date,this.state.endDate);\n    const dateRange = Array.from(range.by('days'));\n    this.setState({startDate: date,\n                   dateRange:dateRange});\n  }\n\n  handleEndDate(date) {\n    const range = moment.range(this.state.startDate,date);\n    const dateRange = Array.from(range.by('days'));\n    this.setState({endDate: date,\n                   dateRange:dateRange});\n  }\n\n  handleStartTime(time) {\n    const range2 = moment.range(time, this.state.endTime);\n    const timeRange = Array.from(range2.by('minutes', {step:30}));\n    this.setState({startTime: time,\n                   timeRange: timeRange});\n  }\n\n  handleEndTime(time) {\n    const range2 = moment.range(this.state.startTime, time);\n    const timeRange = Array.from(range2.by('minutes', {step:30}));\n    this.setState({endTime: time,\n                   timeRange: timeRange});\n  }\n\n  handleProjectNameChange(name) {\n    this.setState({projectName: name});\n  }\n\n  handleProjectEmojiChange(emoji) {\n    this.setState({projectEmoji: emoji});\n  }\n\n  handleAddProject(project) {\n    let tempObj = {}\n    tempObj[this.state.projectName] = this.state.projectEmoji;\n    this.setState(prevState => ({\n      projects: {...prevState.projects,...tempObj}\n    }))\n\n    let storageObj = this.state.projects;\n    storageObj[this.state.projectName] = this.state.projectEmoji;\n    localStorage.setItem(\"projects\",JSON.stringify(storageObj))\n  }\n\n  handleDeleteProject(project) {\n    var projects = this.state.projects;\n    delete projects[project.target.value];\n    this.setState({projects:projects})\n    localStorage.setItem(\"projects\",JSON.stringify(projects))\n  }\n\n  handleFileUpload() {\n    this.setState({\"projects\": localStorage.getItem('projects')})\n  }\n\n  render() {\n\n    return (\n        <div>\n          <div>\n            <Header\n              startDate = {this.state.startDate}\n              endDate = {this.state.endDate}\n              startTime = {this.state.startTime}\n              endTime = {this.state.endTime}\n              dateRange = {this.state.dateRange}\n              timeRange = {this.state.timeRange}\n              handleStartDate = {this.handleStartDate.bind(this)}\n              handleEndDate = {this.handleEndDate.bind(this)}\n              handleStartTime = {this.handleStartTime.bind(this)}\n              handleEndTime = {this.handleEndTime.bind(this)}\n              projects = {this.state.projects}\n              emoji = {this.state.emoji}\n              handleAddProject = {this.handleAddProject.bind(this)}\n              handleProjectNameChange = {this.handleProjectNameChange.bind(this)}\n              handleProjectEmojiChange = {this.handleProjectEmojiChange.bind(this)}\n              handleDeleteProject = {this.handleDeleteProject.bind(this)}\n              handleFileUpload = {this.handleFileUpload.bind(this)}\n               />\n          </div>\n          <div>\n            <CalendarGrid\n              dateRange = {this.state.dateRange}\n              timeRange = {this.state.timeRange}\n              />\n          </div>\n        </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  type Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n  };\r\n  \r\n  export function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(\r\n        process.env.PUBLIC_URL,\r\n        window.location.href\r\n      );\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}